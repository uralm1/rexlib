#!/usr/sbin/nft -f

flush ruleset

add table ip filter
add table inet filter

# setup default polices
add chain inet filter input { type filter hook input priority 0; policy drop; }
add chain inet filter forward { type filter hook forward priority 0; policy drop; }
add chain inet filter output { type filter hook output priority 0; policy drop; }

# accept everything on loopback
add rule inet filter input iif lo accept
add rule inet filter output oif lo accept

# pass outgoing connections' traffic
add rule inet filter input ct state related,established accept

# icmp/icmpv6
add chain inet filter INPUT_ICMP
add rule inet filter INPUT_ICMP icmp type { echo-reply,destination-unreachable,source-quench,time-exceeded,parameter-problem } accept
add rule inet filter INPUT_ICMP icmp type echo-request limit rate 100/second burst 5 packets counter accept
add rule inet filter INPUT_ICMP counter drop

add rule inet filter input ip protocol icmp jump INPUT_ICMP
add rule inet filter output ip protocol icmp accept

add chain inet filter INPUT_ICMPV6
add rule inet filter INPUT_ICMPV6 icmpv6 type { echo-reply,destination-unreachable,packet-too-big,time-exceeded,parameter-problem,nd-neighbor-solicit,nd-router-advert,nd-neighbor-advert } accept
add rule inet filter INPUT_ICMPV6 icmpv6 type echo-request limit rate 100/second burst 5 packets counter accept
add rule inet filter INPUT_ICMPV6 counter drop

add rule inet filter input ip6 nexthdr icmpv6 jump INPUT_ICMPV6
add rule inet filter output ip6 nexthdr icmpv6 accept

# allow dhcp
add rule inet filter input udp sport 67-68 udp dport 67-68 accept
add rule inet filter output udp sport 67-68 udp dport 67-68 accept
# or drop and don't log broadcast dhcp packets
#add rule inet filter input udp sport 67-68 udp dport 67-68 counter drop

# accept incoming ident
add rule inet filter input tcp dport auth accept

# accept incoming ssh *output - for safety*
add rule inet filter input tcp dport ssh accept
add rule inet filter output tcp sport ssh accept

# time, daytime, ntp
add rule inet filter input tcp dport { time,daytime } accept
add rule inet filter input udp dport ntp accept

# http,https
#add rule inet filter input tcp dport { http,https,8080,3000 } accept
#add rule inet filter output tcp sport { http,https,8080,3000 } accept

define ip_bikini = 10.15.0.3
# icinga nrpe
add rule inet filter input ip saddr $ip_bikini tcp dport 5666 accept
add rule inet filter output ip daddr $ip_bikini tcp sport 5666 accept

# dns
#add rule inet filter input udp dport domain accept
#add rule inet filter output udp sport domain accept
#add rule inet filter input tcp dport domain accept
#add rule inet filter output tcp sport domain accept
# send dns requests from local dns server and resolver
add rule inet filter output udp dport domain accept
add rule inet filter output tcp dport domain accept

# bacula-fd
add rule inet filter input tcp dport 9102 accept
add rule inet filter output tcp sport 9102 accept

# docker
add rule inet filter input ip saddr 10.15.0.31 tcp dport 2376 accept
# compartibility
add chain ip filter DOCKER-USER
add rule ip filter DOCKER-USER mark set 1
add rule inet filter forward mark 1 accept

# snmp
add rule inet filter input udp dport snmp accept

# pass all packets
#add rule inet filter input accept
add rule inet filter output accept

# drop smb packets on input quietly
add rule inet filter input udp dport { 137,138,139 } counter drop
add rule inet filter input tcp dport { 137,138,139 } counter drop

# drop broadcast packets quietly
add rule inet filter input meta pkttype broadcast counter drop

# route all packets
###add rule inet filter forward accept

#--------------------------------------------
# catch all and log
add chain inet filter FINAL_FORWARD_DROP
add rule inet filter FINAL_FORWARD_DROP limit rate 3/minute burst 3 packets log prefix "FIN_FWD_DROP:" group 0 
add rule inet filter FINAL_FORWARD_DROP counter drop

add chain inet filter FINAL_INPUT_DROP
add rule inet filter FINAL_INPUT_DROP limit rate 3/minute burst 3 packets log prefix "FIN_IN_DROP:" group 0 
add rule inet filter FINAL_INPUT_DROP counter drop

add chain inet filter FINAL_OUTPUT_DROP
add rule inet filter FINAL_OUTPUT_DROP limit rate 3/minute burst 3 packets log prefix "FIN_OUT_DROP:" group 0 
add rule inet filter FINAL_OUTPUT_DROP counter drop

add rule inet filter input jump FINAL_INPUT_DROP
add rule inet filter output jump FINAL_OUTPUT_DROP
add rule inet filter forward jump FINAL_FORWARD_DROP

#add rule inet filter input drop
#add rule inet filter output drop
#add rule inet filter forward drop

###
### do systemctl restart docker after
###
